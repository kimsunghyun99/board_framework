/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-11-08 06:06:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/springboot_board/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/board/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1699421000727L));
    _jspx_dependants.put("jar:file:/C:/springboot_board/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/board/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005ftype_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005ftype_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005ftype_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"/resources/css/board.css\" type=\"text/css\">\n");
      out.write("    <title>게시물 내용 보기</title>\n");
      out.write("\n");
      out.write("    <style>\n");
      out.write("     \n");
      out.write("        \n");
      out.write("        .boardView {\n");
      out.write("            width: 60%;\n");
      out.write("            height:auto;\n");
      out.write("            margin:auto;\n");
      out.write("            padding: 20px, 20px;\n");
      out.write("            background-color: white;\n");
      out.write("            border:solid 4px gray;\n");
      out.write("            border-radius:20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .items {\n");
      out.write("            width:90%;\n");
      out.write("            height: 25px;\n");
      out.write("            outline: none;\n");
      out.write("            color : #636e72;\n");
      out.write("            font-size: 16px;\n");
      out.write("            background:none;\n");
      out.write("            border-bottom: 2px solid #adadad;\n");
      out.write("            margin: 30px;\n");
      out.write("            padding: 10px;\n");
      out.write("            text-align: left;\n");
      out.write("\n");
      out.write("        }\n");
      out.write("        .textArea {\n");
      out.write("            width:90%;\n");
      out.write("            height: 350px;\n");
      out.write("            overflow:auto;\n");
      out.write("            margin: 22px;\n");
      out.write("            padding: 10px;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("            border: 2px solid #adadad;\n");
      out.write("            text-align : left;\n");
      out.write("            font-size: 16px;\n");
      out.write("            resize : both;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .likeClick, .dislikeClick {\n");
      out.write("        padding: 10px 10px;\n");
      out.write("        text-align: center;\n");
      out.write("        text-decoration: none;\n");
      out.write("        border: solid 1px #a0a0a0;\n");
      out.write("        display: inline-block;\n");
      out.write("        background-color: #d2d2d2;\n");
      out.write("        border-radius: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .bottom_menu {\n");
      out.write("        margin-top : 20px;\n");
      out.write("                     }\n");
      out.write("    .bottom_menu > a:link, .bottom_menu > a:visited {\n");
      out.write("        background-color: #FFA500;\n");
      out.write("        color:maroon;\n");
      out.write("        padding: 15px 25px;\n");
      out.write("        text-align: center;\n");
      out.write("        display : inline-block;\n");
      out.write("        text-decoration:none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .bottom_menu > a:hover, .bottom_menu > a:active {\n");
      out.write("        background-color: #1E90FF;\n");
      out.write("        text-decoration: none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    </style>\n");
      out.write("\n");
      out.write("   \n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("var myLikeCheck;\n");
      out.write("var myDislikeCheck;\n");
      out.write("\n");
      out.write("window.onload = () => {\n");
      out.write("	//var \n");
      out.write("	var likeCnt = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.likecnt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("	var dislikeCnt = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.dislikecnt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("	 myLikeCheck = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myLikeCheck}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("	 myDislikeCheck = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myDislikeCheck}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("	\n");
      out.write("	 like.innerHTML = likeCnt;\n");
      out.write("    dislike.innerHTML = dislikeCnt;	\n");
      out.write("    \n");
      out.write("    if(myLikeCheck == 'Y') document.querySelector('.likeClick').style.backgroundColor = '#00B9FF';\n");
      out.write("    else if(myDislikeCheck == 'Y') document.querySelector('.dislikeClick').style.backgroundColor = '#00B9FF';\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    if(myLikeCheck == \"Y\") myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님의 선택은 좋아요입니다.';\n");
      out.write("    else if(myDislikeCheck == \"Y\") myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님의 선택은 싫어요입니다';\n");
      out.write("    else if(myLikeCheck == \"N\" && myDislikeCheck == \"N\") myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님은 아직 선택을 안 했네요';\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("}\n");
      out.write("\n");
      out.write("// 좋아요 처리\n");
      out.write("const likeView = () => {\n");
      out.write("	\n");
      out.write("	if(myLikeCheck == \"Y\" && myDislikeCheck == \"N\") { // 과거에 사용자가 좋아요를 선택한 상태에서 좋아요를 클릭하면 좋아요가 취소로 변환\n");
      out.write("		alert(\"좋아요를 취소합니다.\");\n");
      out.write("		const checkCnt = 1;  // likeCnt -- ;  --> 6개의 조건 중 1번 조건\n");
      out.write("		myLikeCheck = \"N\";\n");
      out.write("		sendDataToServer(myLikeCheck, myDislikeCheck, checkCnt);\n");
      out.write("		document.querySelector('.likeClick').style.backgroundColor = '#d2d2d2';\n");
      out.write("	}else if(myLikeCheck == \"N\" && myDislikeCheck == \"Y\") { // 과거에 사용자가 싫어요를 선택한 상태에서 좋아요를 클릭하면 싫어요가 취소되고 좋아요를 선택\n");
      out.write("		alert(\"싫어요가 취소되고 좋아요가 등록됩니다\");\n");
      out.write("	    const checkCnt = 2;  // likeCnt++ , dislikeCnt -- \n");
      out.write("	    myLikeCheck = \"Y\";\n");
      out.write("	    myDislikeCheck = \"N\";\n");
      out.write("	    sendDataToServer(myLikeCheck, myDislikeCheck, checkCnt);\n");
      out.write("	    document.querySelector('.likeClick').style.backgroundColor = '#00B9FF';\n");
      out.write("	    document.querySelector('.dislikeClick').style.backgroundColor = '#d2d2d2';\n");
      out.write("	}else if(myLikeCheck == \"N\" && myDislikeCheck == \"N\") {\n");
      out.write("		alert(\"좋아요를 선택했습니다.\");\n");
      out.write("		const checkCnt = 3; // likeCnt++ \n");
      out.write("		myLikeCheck = \"Y\"\n");
      out.write("			sendDataToServer(myLikeCheck, myDislikeCheck, checkCnt);\n");
      out.write("		document.querySelector('.likeClick').style.backgroundColor = '#00B9FF';\n");
      out.write("	}\n");
      out.write("	if(myLikeCheck == 'Y') myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님의 선택은 좋아요입니다.';\n");
      out.write("    else if(myDislikeCheck == 'Y') myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님의 선택은 싫어요입니다';\n");
      out.write("    else if(myLikeCheck == \"N\" && myDislikeCheck == \"N\") myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님은 아직 선택을 안 했네요';\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write("// 싫어요 처리\n");
      out.write("const dislikeView = () => {\n");
      out.write("\n");
      out.write("	if(myDislikeCheck == \"Y\" && myLikeCheck == \"N\") { \n");
      out.write("		alert(\"싫어요를 취소합니다.\");\n");
      out.write("		const checkCnt = 4;  // dislikeCnt -- ;  --> 6개의 조건 중 1번 조건\n");
      out.write("		myDislikeCheck = \"N\";\n");
      out.write("		sendDataToServer(myLikeCheck, myDislikeCheck, checkCnt);\n");
      out.write("		document.querySelector('.dislikeClick').style.backgroundColor = '#d2d2d2';\n");
      out.write("	}else if(myDislikeCheck == \"N\" && myLikeCheck == \"Y\") { // 과거에 사용자가 싫어요를 선택한 상태에서 좋아요를 클릭하면 싫어요가 취소되고 좋아요를 선택\n");
      out.write("		alert(\"좋아요가 취소되고 싫어요가 등록됩니다\");\n");
      out.write("	    const checkCnt = 5;  // likeCnt-- , dislikeCnt++ \n");
      out.write("	    myLikeCheck = \"N\";\n");
      out.write("	    myDislikeCheck = \"Y\";\n");
      out.write("	    sendDataToServer(myLikeCheck, myDislikeCheck, checkCnt);\n");
      out.write("	    document.querySelector('.likeClick').style.backgroundColor = '#d2d2d2';\n");
      out.write("	    document.querySelector('.dislikeClick').style.backgroundColor = '#00B9FF';\n");
      out.write("	}else if(myDislikeCheck == \"N\" && myLikeCheck == \"N\") {\n");
      out.write("		alert(\"싫어요를 선택했습니다.\");\n");
      out.write("		const checkCnt = 6; // dislikeCnt++ \n");
      out.write("		myDislikeCheck = \"Y\"\n");
      out.write("			sendDataToServer(myLikeCheck, myDislikeCheck, checkCnt);\n");
      out.write("		document.querySelector('.dislikeClick').style.backgroundColor = '#00B9FF';\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	if(myLikeCheck == 'Y') myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님의 선택은 좋아요입니다.';\n");
      out.write("    else if(myDislikeCheck == 'Y') myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님의 선택은 싫어요입니다';\n");
      out.write("    else if(myLikeCheck == \"N\" && myDislikeCheck == \"N\") myChoice.innerHTML = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님은 아직 선택을 안 했네요';\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write("// 좋아요 // 싫어요 값 비동기 서버 전송 서버 전송\n");
      out.write("const sendDataToServer = async (myLike,myDislike,checkCount) => {\n");
      out.write("	const myLikeCheck = myLike;\n");
      out.write("	const myDisLikeCheck = myDislike;\n");
      out.write("	const checkCnt = checkCount;\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	const queryString = { \n");
      out.write("			seqno: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\n");
      out.write("			userid: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\n");
      out.write("			mylikecheck: myLikeCheck,\n");
      out.write("			mydislikecheck: myDislikeCheck,\n");
      out.write("			checkCnt: checkCnt\n");
      out.write("			\n");
      out.write("	};\n");
      out.write("	console.log(checkCnt);\n");
      out.write("	await fetch('/board/likeCheck', {\n");
      out.write("		method: 'POST',\n");
      out.write("		headers: {\"content-type\":\"application/json\"},\n");
      out.write("		body:JSON.stringify(queryString)\n");
      out.write("	}).then((response)=> response.json())\n");
      out.write("	.then((data)=>{\n");
      out.write("		console.log(seqno);\n");
      out.write("		console.log(checkCnt);\n");
      out.write("		like.innerHTML = data.likeCnt;\n");
      out.write("		dislike.innerHTML = data.dislikeCnt;\n");
      out.write("	}).catch((error)=> {\n");
      out.write("		console.log(\"error = \" + error)\n");
      out.write("	});\n");
      out.write("			\n");
      out.write("		\n");
      out.write("\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("// 게시물 삭제\n");
      out.write("const boardDelete = async () => {\n");
      out.write("\n");
      out.write("       if(confirm(\"정말 삭제 하시겠습니까?\")==true)  document.location.href ='/board/delete?seqno=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("}\n");
      out.write("\n");
      out.write("// 댓글 등록 처리\n");
      out.write("const replyRegister = async () => {\n");
      out.write("		\n");
      out.write("	const replycontent = document.querySelector('#replycontent');\n");
      out.write("	if(replycontent.value==='') {\n");
      out.write("		alert('댓글을 입력하세요.');\n");
      out.write("		replycontent.focus();\n");
      out.write("		return false;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	const data = {\n");
      out.write("			replywriter: replywriter.value,\n");
      out.write("			replycontent: replycontent.value,\n");
      out.write("			userid: userid.value,\n");
      out.write("			seqno: seqno.value\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	await fetch('/board/reply?option=I', {\n");
      out.write("		method:'POST',\n");
      out.write("		headers:{\"content-type\":\"application/json\"},\n");
      out.write("		body: JSON.stringify(data)\n");
      out.write("	}).then((response)=> response.json())\n");
      out.write("	.then((data)=> replyList(data))\n");
      out.write("	.catch((error) => {\n");
      out.write("		console.log(\"error = \" + error);\n");
      out.write("		alert(\"시스템 장애로 댓글 등록이 실패했습니다.\");\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	replycontent.value= '';\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write("// 댓글 목록 가져오기\n");
      out.write("\n");
      out.write("const replyList = (data) =>  {\n");
      out.write("	var session_userid = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("	const jsonInfo = data;\n");
      out.write("	\n");
      out.write("	let replyList = document.querySelector('#replyList');\n");
      out.write("	replyList.innerHTML = '';\n");
      out.write("	\n");
      out.write("	var result = '';\n");
      out.write("	for(const i in jsonInfo) {\n");
      out.write("		\n");
      out.write("		let elm = document.createElement('div'); // <div id='s3' style='font-size:0.8cm'><div>\n");
      out.write("		elm.setAttribute('id','s' + jsonInfo[i].replyseqno);\n");
      out.write("		elm.setAttribute('style','font-size:0.8em');\n");
      out.write("		\n");
      out.write("		let result = \"\";\n");
      out.write("		result += \"작성자 : \" + jsonInfo[i].replywriter;\n");
      out.write("		\n");
      out.write("		if(jsonInfo[i].userid === session_userid) {\n");
      out.write("			result+=\"[<a href=\" + \"'javascript:replyModify(\" + jsonInfo[i].replyseqno + \")'style='cursor:pointer'>수정</a> |\";\n");
      out.write("			result+=\"<a href=\" + \"'javascript:replyDelete(\" + jsonInfo[i].replyseqno + \")'style='cursor:pointer'>삭제</a>]\";\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		let date = new Date(jsonInfo[i].replyregdate);\n");
      out.write("		let year = date.getFullYear();\n");
      out.write("		let month = date.getMonth() + 1;\n");
      out.write("		let day = date.getDate();\n");
      out.write("		let hour = date.getHours();\n");
      out.write("		let minute = date.getMinutes();\n");
      out.write("		let second = date.getSeconds();\n");
      out.write("\n");
      out.write("		//2023-03-5 14:05:26\n");
      out.write("		month = month >= 10? month: '0' + month;\n");
      out.write("		day = day >= 10? day: '0' + day;\n");
      out.write("		hour = hour >= 10? hour: '0' + hour;\n");
      out.write("		minute = minute >= 10? minute: '0' + minute;\n");
      out.write("   		second = second >= 10? second: '0' + second;\n");
      out.write("   			\n");
      out.write("   			let regdate = year + \"-\" + month + \"-\" + day + \"-\" + \" \" + hour + \":\" + minute + \":\" + second;\n");
      out.write("		\n");
      out.write("		\n");
      out.write("	//	result += \"&nbsp;&nbsp;\" + jsonInfo[i].replyregdate;\n");
      out.write("	result += \"&nbsp;&nbsp;\" + regdate;\n");
      out.write("		result += \"<div style='width:90%height:auto;border-top:solid 1px gray;overflow:auto;'>\";\n");
      out.write("		result += \"<pre id='c\" + jsonInfo[i].replyseqno + \"'>\" + jsonInfo[i].replycontent + \"</pre>\";\n");
      out.write("		result += \"</div><br>\";\n");
      out.write("		\n");
      out.write("		elm.innerHTML = result;\n");
      out.write("		replyList.appendChild(elm);\n");
      out.write("		console.log(replyList.outerHTML);\n");
      out.write("		\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("const startupPage = async () => {\n");
      out.write("	const data = {seqno: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("};\n");
      out.write("	\n");
      out.write("	await fetch('/board/reply?option=L', {\n");
      out.write("		method: 'POST',\n");
      out.write("		headers:{\"content-type\":\"application/json\"},\n");
      out.write("		body:JSON.stringify(data)           // JSON 으로 변환\n");
      out.write("	}).then((response) => response.json())\n");
      out.write("	.then((data) => replyList(data))\n");
      out.write("	.catch((error) => {\n");
      out.write("		console.log(\"error = \" + error);\n");
      out.write("		alert(\"시스템 장애로 댓글 가져 오기가 실패했습니다.\");\n");
      out.write("	}); \n");
      out.write("}\n");
      out.write("\n");
      out.write("const replyDelete = async(replyseqno) => {\n");
      out.write("	if(confirm(\"정말로 삭제하겠습니까?\")) {\n");
      out.write("		const data = { replyseqno: replyseqno, seqno : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("};\n");
      out.write("		await fetch('/board/reply?option=D',{\n");
      out.write("			\n");
      out.write("			method: 'POST',\n");
      out.write("			headers: {\n");
      out.write("				\"content-type\": \"application/json\"\n");
      out.write("			},\n");
      out.write("			body: JSON.stringify(data)\n");
      out.write("		}).then((response) => response.json())\n");
      out.write("		.then((data) => replyList(data))\n");
      out.write("		.catch((error) => {\n");
      out.write("			console.log(\"error = \" + error);\n");
      out.write("			alert(\"서버 장애로 댓글 삭제가 실패했습니다.\");\n");
      out.write("		});\n");
      out.write("				\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("const replyModify = (replyseqno) => {\n");
      out.write("	\n");
      out.write("	// 댓글 내용 임시 저장 \n");
      out.write("	const modifyReplyContent = document.querySelector('#c' + replyseqno);\n");
      out.write("	\n");
      out.write("	var strReplyList = \"작성자 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&nbsp;\"\n");
      out.write("	                      + \"<input type='button' id='btn_replyModify' value='수정'>\"\n");
      out.write("	                      + \"<input type='button' id='btn_replyModifyCancel' value='취소'>\"\n");
      out.write("	                      + \"<input type='hidden' name='replyseqno' value='\" + replyseqno + \"'>\"\n");
      out.write("	                      + \"<input type='hidden' name='seqno' value='\" + ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + \"'>\"\n");
      out.write("	                      + \"<input type='hidden' id='replywriter' name='replywriter' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'>\"\n");
      out.write("	                      + \"<input type='hidden' id='userid' name='userid' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'><br>\"\n");
      out.write("	                      + \"<textarea id='modify_replycontent' name='replycontent' cols='80' rows='5' maxlength='150' placeholder='글자수 150자 이내'>\" \n");
      out.write("	                      + modifyReplyContent.innerHTML + \"</textarea><br>\";\n");
      out.write("	                      \n");
      out.write("	                      let elm = document.createElement('div');\n");
      out.write("	                      elm.innerHTML = strReplyList;\n");
      out.write("	                      \n");
      out.write("          // 개별 댓글 목록을 둘러싸고 있는 div\n");
      out.write("       let parentDiv = document.querySelector('#s' + replyseqno).parentNode;\n");
      out.write("          parentDiv.insertBefore(elm,document.querySelector('#s' + replyseqno));\n");
      out.write("          document.querySelector('#s' + replyseqno).style.display = 'none';\n");
      out.write("          \n");
      out.write("          const btnReplyModify = document.querySelector('#btn_replyModify');\n");
      out.write("          const btnReplyModifyCancel = document.querySelector('#btn_replyModifyCancel');\n");
      out.write("          btnReplyModify.addEventListener('click', async () => { \n");
      out.write("         	 \n");
      out.write("       \n");
      out.write("         	 const data = {\n");
      out.write("         			 replyseqno: replyseqno,\n");
      out.write("         	 		 replycontent: modify_replycontent.value\n");
      out.write("         	 };\n");
      out.write("         	 \n");
      out.write("         	 await fetch('/board/reply?option=U', {\n");
      out.write("         		 method: 'POST',\n");
      out.write("         			 headers: {\"content-type\": \"application/json\"},\n");
      out.write("         				body: JSON.stringify(data)\n");
      out.write("         	 }).catch((error)=>{\n");
      out.write("         		 console.log(\"error = \" + error);\n");
      out.write("         		 alert(\"서버 장애로 댓글 수정이 실패 했습니다.\");\n");
      out.write("         	 });\n");
      out.write("         	 \n");
      out.write("         	 document.querySelector('#replyList').innerHTML = '';\n");
      out.write("         	 startupPage();\n");
      out.write("         	 \n");
      out.write("          }); // btnReplyModify 이벤트 처리 완료\n");
      out.write("          \n");
      out.write("          \n");
      out.write("          btnReplyModifyCancel.addEventListener('click',()=> {\n");
      out.write("         	 if(confirm('정말로 취소하시겠습니까?')==true) {\n");
      out.write("         		 document.querySelector('#replyList').innerHTML = '';\n");
      out.write("          	 startupPage();\n");
      out.write("         	 }\n");
      out.write("          });\n");
      out.write("	                      \n");
      out.write("}\n");
      out.write("const replycancel = () => {\n");
      out.write("	 if(confirm('정말로 취소하시겠습니까?')==true) { \n");
      out.write("		 replycontent.value = '';\n");
      out.write("		 replycontent.focus();\n");
      out.write("	 }\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");


String userid = (String)session.getAttribute("userid");
String username = (String)session.getAttribute("username");
String role = (String)session.getAttribute("role");
if(userid ==null) response.sendRedirect("/");


      out.write("\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("    \n");
      out.write("    <script>\n");
      out.write("    startupPage();\n");
      out.write("    </script>\n");
      out.write("   \n");
      out.write("\n");
      out.write("\n");
      out.write("<div class =\"main\">\n");
      out.write("\n");
      out.write("    <img src=\"/resources/images/logo.jpg\" class=\"topBanner\"><br>\n");
      out.write("    <h1 style=\"text-align: center;\">게시물 내용 보기</h1>\n");
      out.write("    <br>\n");
      out.write("\n");
      out.write("    <div class = \"boardView\">\n");
      out.write("\n");
      out.write("        <div class =\"items\">글쓴이 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </div>\n");
      out.write("        <div class =\"items\">제목 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </div>\n");
      out.write("     <!--  <div class =\"items\">날짜 :  ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.regdate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div> -->  \n");
      out.write("        <div class =\"items\">날짜 : ");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("</div>\n");
      out.write("        <div class =\"textArea\"><pre>내용 :");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </pre> </div>\n");
      out.write("        <div class=\"likeForm\" style=\"width:30%;height:auto;margin:auto;text-align:center;\">\n");
      out.write("        <span id=\"like\"></span>&nbsp;\n");
      out.write("        <a href='javascript:likeView()' id=\"likeClick\" class=\"likeClick\">좋아요</a>&nbsp;\n");
      out.write("        <a href='javascript:dislikeView()' id=\"dislikeClick\" class=\"dislikeClick\">싫어요</a>&nbsp;\n");
      out.write("        <span id=\"dislike\"></span>&nbsp;\n");
      out.write("        <br>\n");
      out.write("        <span id='myChoice' style='text-align:center;color:red'></span>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <br>\n");
      out.write("        \n");
      out.write("        <div class = \"bottom_menu\">\n");
      out.write("            \n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            \n");
      out.write("            <a href = \"/board/list?page=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&keyword=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">목록가기</a> &nbsp;&nbsp;\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("            <a href = \"/board/write\">글 작성</a> &nbsp;&nbsp;\n");
      out.write("            \n");
      out.write("            \n");
      out.write("             ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <div class=\"replyDiv\" style=\"width:60%;height:300px;margin:auto;text-align:left;\">\n");
      out.write("        <p id=\"replyNotice\"> 댓글을 작성해 주세요 </p>\n");
      out.write("        <form id=\"replyForm\" name=\"replyForm\" method=\"POST\">\n");
      out.write("        \n");
      out.write("        작성자 : <input type=\"text\" id=\"replywriter\" name=\"replywriter\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly><br>\n");
      out.write("        <textarea id=\"replycontent\" name=\"replycontent\" cols=\"80\" rows=\"5\" maxlength=\"150\" placeholder=\"글자수:150자 이내\"></textarea><br>\n");
      out.write("        <input type=\"hidden\" id=\"seqno\" name=\"seqno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("        <input type=\"hidden\" id=\"userid\" name=\"userid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        </form>\n");
      out.write("        \n");
      out.write("        <input type=\"button\" id=\"btn_reply\" value=\"댓글등록\" onclick=\"replyRegister()\">\n");
      out.write("        <input type=\"button\" id=\"btn_cancel\" value=\"취소\" onclick=\"replycancel()\">\n");
      out.write("        <hr>\n");
      out.write("        <div id=\"replyList\" style=\"width:90%;height:600px;overflow:auto;\"></div>\n");
      out.write("   	      </div>\n");
      out.write("       \n");
      out.write("        <br><br>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005ftype_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /WEB-INF/views/board/view.jsp(440,33) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.regdate}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/view.jsp(440,33) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setType("both");
      // /WEB-INF/views/board/view.jsp(440,33) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd [E] a hh:mm:ss");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005ftype_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/board/view.jsp(452,0) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/view.jsp(452,0) '${fileInfoView}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${fileInfoView}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/board/view.jsp(452,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("fileInfoView");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(" \n");
            out.write("        <div class=\"field\">\n");
            out.write("        파일명 : <a href=\"/board/fileDownload?fileseqno=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fileInfoView.fileseqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fileInfoView.org_filename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a> (");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fileInfoView.filesize}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" Byte)\n");
            out.write("        </div>\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/board/view.jsp(462,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pre_seqno != 0}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                <a href = \"/board/view?seqno=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pre_seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&page=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&keyword=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"> 이전▼</a> &nbsp;&nbsp;\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/board/view.jsp(467,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${next_seqno != 0}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("            <a href = \"/board/view?seqno=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${next_seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&page=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&keyword=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">다음▲</a> &nbsp;&nbsp;\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/board/view.jsp(474,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userid == view.userid}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("            \n");
          out.write("            <a href = \"/board/modify?seqno=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${view.seqno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&page=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&keyword=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">글 수정</a> &nbsp;&nbsp;\n");
          out.write("            <a href = \"javascript:boardDelete()\">글 삭제</a>\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
